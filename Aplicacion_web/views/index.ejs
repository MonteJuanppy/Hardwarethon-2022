<!doctype html>
<html lang="en">
  <head>
    <%- include('partials/head'); %>
  </head>

  <body>
   
          <%- include('partials/header'); %>
    <div class="container-fluid">
      
      <div class ="row">

        <div class ="col-sm-2 col-md-2 col-lg-2 col-xl-2 py-1">
          <div class="jumbotron">
            <h3>Hardwarethon</h3>

          </div>
        </div>
        
        <div class ="col-sm-12 col-md-9 col-lg-9 col-xl-9 py-2">
          <div class = "row">
            <div class="col"> 
              <div id="map"></div>
            </div>
          </div>
        
          <div class = "row">
            <div class="col py-2"> 
              <div class="card chart-container">
                <canvas id="chart"></canvas>
              </div>
            </div>
            <div class="col py-2"> 
              <div class="card" style="width: 18rem;">
                <div class="card-body">
                  <h5 class="card-title">Aviso</h5>
                  <h6 class="card-subtitle mb-2 text-muted">Notificacion de advertencia</h6>
                  <p class="card-text">Se recomiendo mantenerse sus pertenencia bajo resguardo</p>
                  <a href="#" class="card-link">Card link</a>
                  <a href="#" class="card-link">Another link</a>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class ="col-sm-12 col-md-1 col-lg-1 col-xl-1 py-2">
          <div class="d-grid gap-2">
            <button id= alarmI type="button" class="btn btn-success"><span class="cil-contrast btn-icon mr-2"></span> Alarma I</button>
            <button id=alarmII type="button" class="btn btn-warning"><span class="cil-contrast btn-icon mr-2"></span> Alarma II</button>
            <button id=pushAlarm type="button" class="btn btn-danger"><span class="cil-contrast btn-icon mr-2"></span> pushAlarm</button>
          </div>
        </div>
      </div>
    
    </div>
    <footer>
      <%- include('partials/footer'); %>
    </footer>
  </body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"> </script>
<script src="socket.io/socket.io.js"> </script>

<script>
  const ctx = document.getElementById("chart").getContext('2d');
  const myChart = new Chart(ctx, {
    type: 'line',
    data: {
      //labels: [],
      labels: <%- JSON.stringify(labels); %>,
      datasets: [{label: 'Levels',backgroundColor: 'rgba(161, 198, 247, 1)', borderColor: 'rgb(47, 128, 237)', 
      //data: [],
      data: <%- JSON.stringify(data); %>,
      }]
    },
    options: {
      scales: { yAxes: [{ ticks: { beginAtZero: true, }}]}
    },
  });

  const socket = io();
  let bottonAlarmI = document.getElementById("alarmI");
  bottonAlarmI.addEventListener('click', async () => {
      const response = await fetch('/dis', {method: 'POST'});
      const data = await response.json();
      bottonAlarmI.textContent = data.count;
      socket.emit("alarmI:update");             // Emitimos evento hacia el cliente
    });

  let bottonAlarmII = document.getElementById("alarmII");
  bottonAlarmII.addEventListener('click', async() => {
      socket.emit("alarmII:update");             // Emitimos evento hacia el cliente
    });

  let pushAlarm = document.getElementById("pushAlarm");
  pushAlarm.addEventListener('click', async() => {
      socket.emit("push:Alarm");             // Emitimos evento hacia el cliente
    });
  
  socket.on("alarmI:update", data => {
    bottonAlarmI.textContent = data;
    });

  socket.on("db:update", function(data) {
    console.log("mqttRes", data)
    
    if(myChart.data.labels.length != 15) { 
      myChart.data.labels.push(data.time);  //Add time in x-asix
      myChart.data.datasets.forEach((dataset) => {
        dataset.data.push(data.data); //Add temp in y-axis
      });
    }
    else {
      myChart.data.labels.shift(); //Remove first time data
      myChart.data.labels.push(data.time); //Insert latest time data
      myChart.data.datasets.forEach((dataset) => {
        dataset.data.shift(); //Remove first temp data
        dataset.data.push(data.data); //Insert latest temp data
        });
    }

    myChart.update(); //Update the graph.
  });

  ////////////////////////////////////////////////////////////////////

  var geoJsonImn_station = <%- JSON.stringify(imn); %>

  var map = L.map('map').setView([09.92, -84.07], 8);
  var tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);


  var myLayer = L.geoJSON().addTo(map);
  myLayer.addData(geoJsonImn_station);

  socket.on("map:update", () => {
    var polygon = L.polygon([
      [10.06, -84.01],
      [10.18, -84.06],
      [10.10, -84.147]
      ]).addTo(map).bindPopup('Zona de Riesgo');
    });
/*
	var circle = L.circle([51.508, -0.11], {
		color: 'red',
		fillColor: '#f03',
		fillOpacity: 0.5,
		radius: 500
	}).addTo(map).bindPopup('I am a circle.');


	var popup = L.popup()
		.setLatLng([10.4, -85.5])
		.setContent('Standalone popup.')
		.openOn(map);
*/	
var popup = L.popup();

  function onMapClick(e) {
    popup
    .setLatLng(e.latlng)
    .setContent('Tu has hecho clip en ' + e.latlng.toString())
    .openOn(map);
    console.log(e.latlng)
    }

  map.on('click', onMapClick);

</script>
</html>
